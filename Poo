local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "WhaleScripts | Slap Battles", HidePremium = false, SaveConfig = false, ConfigFolder = "OrionTest"})

local AboutTab = Window:MakeTab({
	Name = "About",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

AboutTab:AddParagraph("  What The Fuck Is An Arbys? ","this script was coded by @WhaleRoblox on youtube so subscribe or else ill cut your balls off and tape them to a door knob")

AboutTab:AddButton({
	Name = "Print My YouTube URL",
	Callback = function()
      		print("YouTube.com/@WhaleRoblox")
  	end    
})

AboutTab:AddParagraph("  Suck My Fat Ball-Hair! ","Hidden Hub [MM2] Can Suck The Compassing Area Betweenst My Ballsack And My Asscrack")

AboutTab:AddParagraph("  Option One Or Two ","dont like me saying shit? ass? fuck? ballsack? click here!")

AboutTab:AddButton({
	Name = "i Dont Like You Swearing MR! [Damn Right im A MR]",
	Callback = function()
      		print("wipdog")
  	end    
})

local MiscTab = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

MiscTab:AddButton({
	Name = "God-Mode",
	Callback = function()
      	invincibility()
  	end    
})

function invincibility()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local teleport = game.Workspace.Lobby.Teleport1

if character.isInArena.Value ~= true then
character.HumanoidRootPart.CFrame = teleport.CFrame
end
wait(0.5)
local tool = character:FindFirstChildOfClass("Tool") or player.Backpack:FindFirstChildOfClass("Tool")
tool.Parent = game.ReplicatedStorage
character.Humanoid.Health = 0
wait(6)
player = game.Players.LocalPlayer
character = player.Character or player.CharacterAdded:Wait()
tool.Parent = character
character.HumanoidRootPart.CFrame = game.Workspace.Origo.CFrame
end

MiscTab:AddParagraph("  Gloves That Dont Work With God-Mode ","Killstreak [The Kill Counter]  Reaper, Default, Plague, Overkill")

MIscTab:AddSlider({
	Name = "Reach Slap Aura",
	Min = 10,
	Max = 50,
	Default = 25,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Reach",
	Callback = function(Value)
		_G.ReachSlapArua = Value
	end    
})

MiscTab:AddDropdown({
	Name = "Slap Aura Friend",
	Default = "Fight",
	Options = {"Fight", "Not Fight"},
	Callback = function(Value)
SlapAuraFriend = Value
	end    
})

MiscTab:AddDropdown({
	Name = "Slap Aura Character",
	Default = "Head",
	Options = {"HumanoidRootPart", "Head", "Left Arm", "Left Leg", "Right Arm", "Right Leg"},
	Callback = function(Value)
SlapAuraCharacter = Value
	end    
})

MiscTab:AddDropdown({
	Name = "Slap Aura Choose",
	Default = "Normal",
	Options = {"Normal", "Reverse"},
	Callback = function(Value)
_G.SlapAuraChoose = Value
	end    
})

MiscTab:AddToggle({
	Name = "Slap Aura",
	Default = false,
	Callback = function(Value)
		SlapAura = Value
if _G.SlapAuraChoose == "Normal" then
while SlapAura and SlapAuraFriend == "Fight" and _G.SlapAuraChoose == "Normal" do
pcall(function()
for i,v in pairs(game.Players:GetChildren()) do
                    if v ~= game.Players.LocalPlayer and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and v.Character then
if v.Character:FindFirstChild("entered") and v.Character:FindFirstChild("HumanoidRootPart") and v.Character:FindFirstChild("stevebody") == nil and v.Character:FindFirstChild("rock") == nil and v.Character.HumanoidRootPart.BrickColor ~= BrickColor.new("New Yeller") and v.Character.Ragdolled.Value == false and v.Character:FindFirstChild("Mirage") == nil then
if v.Character.Head:FindFirstChild("UnoReverseCard") == nil or game.Players.LocalPlayer.leaderstats.Glove.Value == "Error" then
Magnitude = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).Magnitude
                        if _G.ReachSlapArua >= Magnitude then
gloveHits[game.Players.LocalPlayer.leaderstats.Glove.Value]:FireServer(v.Character:WaitForChild(SlapAuraCharacter),true)
                end
end
end
end
